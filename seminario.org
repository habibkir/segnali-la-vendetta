#+TITLE: Needs more jpeg, Argenti edition
#+Author: Dasara Shullani Ph.D

* Signal processing appliced to Image Forensics
	* Image forensics usata per capire se immagine è stata modificata.
	* Voilà, funziona la penna
	* Ci stanno mettendo un po' a iniziare, scusate il disturbo
	* Openboard permette di importare pdf, questa è un'ottima notizia
	* Il professore di automatica lo usa per le slide
* Ok, comincia
distinzione di segnali 1D, 2D, 3D

abbiamo visto i segnali 1D, ad esempio un segnale audio
	* 1D, tipo audio
	* 2D, tipo foto
	* 3D, tipo video

Analisi seganli 2D per capire se un'immagine è stata modificata
Questa è una rappresentazione di un soggetto reale, la luce colpisce
un oggetto, la luce viene ricevuta da un sensore, questo segnale
luminoso viene discretizzato\par

Componente principale il sensore, casi principali
	* CCD, light to photodiode
	* CMOS, light to photodiode ampilfier pair

Come si usa CFA per dare colore a immagine
(CFA coso verde verde rosso blu, chiedi a Captain Disillusion)
più verde perchè la banda del verde ricevuta meglio dai nostri occhi\par

campioni il rosso nei punti in cui la pattern è rossa, il resto del
rosso viene interpolato\par

Il passaggio successivo è un processo di compressione, viene
trasformato in bit (encoder) che usi per rivederla (decoder)

Algoritmi
	* *Lossy*: immagine ricorstuita non identica (es. jpeg)
	* *Lossless*: decodifica rende immagine/ segnale identica (pensa
          a un file .zip)

* Jpeg

** Encoder

	* Trasformata DCT
	* Quantizzatore
	* Roba che mi sono perso

** Trasformata DCT

Discrete Cosine Transform, decompone un segnale attraverso le sue
armoniche coseno, somma delle armoniche pesate a dovere danno il
segnale originale.

In ambito immagine come si fa? Dividiamo in blocchi 8x8 non
sovrapposti, e fai la dft per tutti i blocchi
(chunk di un mondo minecraft, \pm)

	* Basse frequenze, descrivono caratteristiche grossolane dell'immagine
	* Medie frequenze, un po' più fine
	* Alte frequenze, molto fini

Voglio un'immagine fedele alla realtà, ma che occupi il meno spazio
possibile

** Quantizzatore

La quantizzazione rimuove dettagli imprecettibili
lo stato di quantizzazine associa a ogni blocco 8x8 una matrice di
luminanza e crominanza (luminanza = intensità, crominanza =
colore), questo è il passo sostanziale di rimozione di dettagli\par

*** I would like to interject for a moment

quelli sono uguali ai passi di quantizzazine, hai un passo \delta più
fine per i dettagli, in alte frequenze i passi sono più alti, in bassa
frequenza i passi sono minore, usare passi diversi permette di avere
più valori nulli, ce n'è uno per ogni valore della matrice

(se non si capisce, non ho capito un cazzo)


** Entropy coding
Claude shannon approva\par

Rappresentare nella maniera più efficiente possbilie, dire 10 0 e 1,
andiamo a fare codifica differenziale, poi boh, poi bah

*** Primo passo, quantizzazione

Quella cosa con l'albero per comprimere, robe comuni vanno a meno bit,
robe rare hanno più bit.

Huffman lookup table, quella cosa con l'albero

Stiamo comprimendo il comprimibile, per quanto possbile.

* Image forensics

Quest'immagine è stata manipolata?

le due macroaree sono
	* St'immagine è stata modificata?
	* Da dove cazzo è venuta st'immagine? Da quale dispositivo?

** Verfica autenticità
es. Jpeg non si allinea nella grigla 8x8, we call this a misalignment

ci sono due casi
	* Doppio jpeg non allineato
	* Doppio jpeg allineato

** Demosaicatura
molto visibile in un'immagine
se non si nota demosaicatura allora l'immagine potrebbe essere stata
modificata

** Identificazione sorgente
Identificazione del dispositivo che ha prodotto l'immagine

si studia l'impronta dell'immagine

un'immagine molto scura presenta rumore nelle parti scure
dell'immagine ad esempio, pensa a tutte le tue foto scacie di
tramonti.

vi sono rumori
	* Shot noise
	* Pattern noise

Photo responsive Non uniformity noise
come, in fase di produzoine, si presentano artefatti di produzione.

Rumore estremamente presente in immagine naturale, e sopravvive molto
bene al processing.

Come si può usare questo rumore per identificare il sensore che ha
prodotto quest'immagine.

Il rumore è estremamente dipendente dall'immagine, viene ottenuto
facendo un denoising dell'immagine, e trovando la differenza tra
denoised e noised.

abbiamo bisogno di parecchie immagini prima di avere una idea completa
del rumore del sensore, meno immagini se hai tanti muri bianchi.

si testano i rumori in senso di correlazione col rumore nella foto per
vedere di capire da chi cazzo è arrivato sto rumore.

Anche tra due dispositivo dello stesso modello ci sono differenze di
come cazzo è messo sto rumore, il rumore è l'impronta digitale di QUEL
dispositivo, non quel modello, quell'istanza del modello.

